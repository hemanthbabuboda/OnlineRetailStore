package com.onlineretailstore.order.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.onlineretailstore.order.entity.Order;
import com.onlineretailstore.order.serviceImpl.OrderServiceImpl;

/**
 * Controller for managing orders in the online retail store.
 * Provides RESTful endpoints for creating, retrieving, updating, and deleting orders.
 */
@RestController
@RequestMapping("/api")
public class OrderController {

    @Autowired
    private OrderServiceImpl service;

    /**
     * Adds a new order.
     *
     * @param order the order to be added
     * @return a ResponseEntity containing the added order and HTTP status 201 (Created)
     */
    @PostMapping("/order")
    public ResponseEntity<Order> addOrder(@RequestBody Order order) {
        return new ResponseEntity<>(service.addOrder(order), HttpStatus.CREATED);
    }

    /**
     * Retrieves an order by its ID.
     *
     * @param OrderId the ID of the order to retrieve
     * @return a ResponseEntity containing the found order and HTTP status 200 (OK)
     */
    @GetMapping("/order/{OrderId}")
    public ResponseEntity<Order> getOrder(@PathVariable Integer OrderId) {
        return new ResponseEntity<>(service.searchOrder(OrderId), HttpStatus.OK);
    }

    /**
     * Updates an existing order.
     *
     * @param OrderId the ID of the order to update
     * @param order   the new order data
     * @return a ResponseEntity containing the updated order and HTTP status 200 (OK)
     */
    @PutMapping("/order/{OrderId}")
    public ResponseEntity<Order> updateOrder(@PathVariable Integer OrderId, @RequestBody Order order) {
        return new ResponseEntity<>(service.updateOrder(OrderId, order), HttpStatus.OK);
    }

    /**
     * Deletes an order by its ID.
     *
     * @param orderId the ID of the order to delete
     * @return a ResponseEntity containing a message indicating the result of the deletion and HTTP status 200 (OK)
     */
    @DeleteMapping("/order/{orderId}")
    public ResponseEntity<String> deleteOrder(@PathVariable Integer orderId) {
        return new ResponseEntity<>(service.deleteOrder(orderId), HttpStatus.OK);
    }
}
